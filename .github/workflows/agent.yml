
name: agent
on: [push, workflow_dispatch]
permissions: { id-token: write, contents: read }

jobs:
  deploy:
    permissions: { id-token: write, contents: read }
    runs-on: ubuntu-latest
    env: { IMAGE_NAME: trading-bot, TAG: latest }
    steps:
      - uses: actions/checkout@v4

      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:  ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: ACR login
        run: az acr login --name $(echo "${{ secrets.ACR_LOGIN_SERVER }}" | cut -d. -f1)

      - name: Build and push
        run: |
          docker buildx build --platform linux/amd64 \
            -t ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}

      - name: Wait for Container App to be ready
        run: |
          for i in {1..15}; do
            state=$(az containerapp show -g "${{ secrets.RESOURCE_GROUP }}" -n "${{ secrets.CONTAINERAPP_NAME }}" --query properties.provisioningState -o tsv || true)
            echo "provisioningState=$state"
            if [ "$state" = "Succeeded" ] || [ -z "$state" ]; then exit 0; fi
            sleep 10
          done
          echo "Timeout esperando Succeeded"; exit 1

      - name: Update Container App (retry)
        run: |
          for i in 1 2 3; do
            az containerapp update \
              -g "${{ secrets.RESOURCE_GROUP }}" \
              -n "${{ secrets.CONTAINERAPP_NAME }}" \
              --image "${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}" && exit 0
            echo "Retry $i..."; sleep 20
          done
          echo "Update failed after retries"; exit 1
