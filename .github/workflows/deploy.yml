name: Build and Deploy to Azure Container Apps

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Verify Azure account
        run: |
          az account show --output table
        shell: bash


      - name: Configure Container App secrets (safe)
        uses: azure/cli@v1
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_WEBHOOK_URL: ${{ secrets.TELEGRAM_WEBHOOK_URL }}
          COSMOS_DB_CONNECTION_STRING: ${{ secrets.COSMOS_DB_CONNECTION_STRING }}
          SOLANA_RPC_URL: ${{ secrets.SOLANA_RPC_URL }}
          AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_KEY }}
          CONTAINERAPP_NAME: ${{ secrets.CONTAINERAPP_NAME }}
          RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
        with:
          inlineScript: |
            set -e
            # Read secrets from environment (avoids using ${{ }} inside the script)
            TELEGRAM_BOT_TOKEN="${TELEGRAM_BOT_TOKEN}"
            TELEGRAM_WEBHOOK_URL="${TELEGRAM_WEBHOOK_URL}"
            COSMOS_DB_CONNECTION_STRING="${COSMOS_DB_CONNECTION_STRING}"
            SOLANA_RPC_URL="${SOLANA_RPC_URL}"
            AZURE_OPENAI_API_KEY="${AZURE_OPENAI_API_KEY}"
            az extension add --name containerapp --upgrade -y
            declare -a SECRETS
            if [ -n "$TELEGRAM_BOT_TOKEN" ]; then SECRETS+=("telegram-bot-token=$TELEGRAM_BOT_TOKEN"); fi
            if [ -n "$TELEGRAM_WEBHOOK_URL" ]; then SECRETS+=("telegram-webhook-url=$TELEGRAM_WEBHOOK_URL"); fi
            if [ -n "$COSMOS_DB_CONNECTION_STRING" ]; then SECRETS+=("cosmos-db-connection-string=$COSMOS_DB_CONNECTION_STRING"); fi
            if [ -n "$SOLANA_RPC_URL" ]; then SECRETS+=("solana-rpc-url=$SOLANA_RPC_URL"); fi
            if [ -n "$AZURE_OPENAI_API_KEY" ]; then SECRETS+=("azure-openai-api-key=$AZURE_OPENAI_API_KEY"); fi
            if [ ${#SECRETS[@]} -eq 0 ]; then
              echo "No secrets provided; skipping secret update."
              exit 0
            fi
            az containerapp secret set \
              --name "$CONTAINERAPP_NAME" \
              --resource-group "$RESOURCE_GROUP" \
              --secrets "${SECRETS[@]}"

      - name: Build, Push, and Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          # Use explicit registry credentials from secrets
          registryUrl: ${{ secrets.ACR_LOGIN_SERVER }}
          registryUsername: ${{ secrets.REGISTRY_USERNAME }}
          registryPassword: ${{ secrets.REGISTRY_PASSWORD }}

          appSourcePath: .
          dockerfilePath: ./Dockerfile
          containerAppName: ${{ secrets.CONTAINERAPP_NAME }}
          resourceGroup: ${{ secrets.RESOURCE_GROUP }}
          targetPort: 3000
          ingress: external
          environmentVariables: |
            TELEGRAM_BOT_TOKEN=secretref:telegram-bot-token
            TELEGRAM_MODE=webhook
            TELEGRAM_WEBHOOK_URL=secretref:telegram-webhook-url
            COSMOS_DB_CONNECTION_STRING=secretref:cosmos-db-connection-string
            SOLANA_RPC_URL=secretref:solana-rpc-url
            AZURE_OPENAI_API_KEY=secretref:azure-openai-api-key
