name: Build and Deploy to Azure Container Apps

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Configure Container App secrets (safe)
        uses: azure/cli@v1
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_WEBHOOK_URL: ${{ secrets.TELEGRAM_WEBHOOK_URL }}
          COSMOS_DB_CONNECTION_STRING: ${{ secrets.COSMOS_DB_CONNECTION_STRING }}
          SOLANA_RPC_URL: ${{ secrets.SOLANA_RPC_URL }}
        with:
          inlineScript: |
            set -e
            az extension add --name containerapp --upgrade -y
            declare -a SECRETS
            if [ -n "$TELEGRAM_BOT_TOKEN" ]; then SECRETS+=("TELEGRAM_BOT_TOKEN=$TELEGRAM_BOT_TOKEN"); fi
            if [ -n "$TELEGRAM_WEBHOOK_URL" ]; then SECRETS+=("TELEGRAM_WEBHOOK_URL=$TELEGRAM_WEBHOOK_URL"); fi
            if [ -n "$COSMOS_DB_CONNECTION_STRING" ]; then SECRETS+=("COSMOS_DB_CONNECTION_STRING=$COSMOS_DB_CONNECTION_STRING"); fi
            if [ -n "$SOLANA_RPC_URL" ]; then SECRETS+=("SOLANA_RPC_URL=$SOLANA_RPC_URL"); fi
            if [ ${#SECRETS[@]} -eq 0 ]; then
              echo "No secrets provided; skipping secret update."
              exit 0
            fi
            az containerapp secret set \
              --name "${{ secrets.CONTAINERAPP_NAME }}" \
              --resource-group "${{ secrets.RESOURCE_GROUP }}" \
              --secrets ${SECRETS[@]}

      - name: Build, Push, and Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          # Use explicit registry credentials from secrets
          registryUrl: ${{ secrets.ACR_LOGIN_SERVER }}
          registryUsername: ${{ secrets.REGISTRY_USERNAME }}
          registryPassword: ${{ secrets.REGISTRY_PASSWORD }}

          imageToBuild: ${{ secrets.ACR_LOGIN_SERVER }}/solana-trading-bot:${{ github.sha }}
          dockerfilePath: ./Dockerfile
          containerAppName: ${{ secrets.CONTAINERAPP_NAME }}
          resourceGroup: ${{ secrets.RESOURCE_GROUP }}
          targetPort: 3000
          ingress: external
          environmentVariables: |
            TELEGRAM_BOT_TOKEN=secretref:TELEGRAM_BOT_TOKEN
            TELEGRAM_MODE=webhook
            TELEGRAM_WEBHOOK_URL=secretref:TELEGRAM_WEBHOOK_URL
            COSMOS_DB_CONNECTION_STRING=secretref:COSMOS_DB_CONNECTION_STRING
            SOLANA_RPC_URL=secretref:SOLANA_RPC_URL
