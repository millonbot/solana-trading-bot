name: Build and Deploy to Azure Container Apps

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Verify Azure account
        run: |
          az account show --output table
        shell: bash


      - name: Configure Container App secrets (safe)
        uses: azure/cli@v1
        with:
          inlineScript: |
            set -e
            az extension add --name containerapp --upgrade -y
            declare -a SECRETS
            if [ -n "${{ secrets.TELEGRAM_BOT_TOKEN }}" ]; then SECRETS+=("telegram-bot-token=${{ secrets.TELEGRAM_BOT_TOKEN }}"); fi
            if [ -n "${{ secrets.TELEGRAM_WEBHOOK_URL }}" ]; then SECRETS+=("telegram-webhook-url=${{ secrets.TELEGRAM_WEBHOOK_URL }}"); fi
            if [ -n "${{ secrets.COSMOS_DB_CONNECTION_STRING }}" ]; then SECRETS+=("cosmos-db-connection-string=${{ secrets.COSMOS_DB_CONNECTION_STRING }}"); fi
            if [ -n "${{ secrets.SOLANA_RPC_URL }}" ]; then SECRETS+=("solana-rpc-url=${{ secrets.SOLANA_RPC_URL }}"); fi
            if [ -n "${{ secrets.AZURE_OPENAI_KEY }}" ]; then SECRETS+=("azure-openai-key=${{ secrets.AZURE_OPENAI_KEY }}"); fi
            if [ ${#SECRETS[@]} -eq 0 ]; then
              echo "No secrets provided; skipping secret update."
              exit 0
            fi
            az containerapp secret set \
              --name "${{ secrets.CONTAINERAPP_NAME }}" \
              --resource-group "${{ secrets.RESOURCE_GROUP }}" \
              --secrets "${SECRETS[@]}"

      - name: Build, Push, and Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          # Use explicit registry credentials from secrets
          registryUrl: ${{ secrets.ACR_LOGIN_SERVER }}
          registryUsername: ${{ secrets.REGISTRY_USERNAME }}
          registryPassword: ${{ secrets.REGISTRY_PASSWORD }}

          appSourcePath: .
          dockerfilePath: ./Dockerfile
          containerAppName: ${{ secrets.CONTAINERAPP_NAME }}
          resourceGroup: ${{ secrets.RESOURCE_GROUP }}
          targetPort: 3000
          ingress: external
          environmentVariables: |
            TELEGRAM_BOT_TOKEN=secretref:telegram-bot-token
            TELEGRAM_MODE=webhook
            TELEGRAM_WEBHOOK_URL=secretref:telegram-webhook-url
            COSMOS_DB_CONNECTION_STRING=secretref:cosmos-db-connection-string
            SOLANA_RPC_URL=secretref:solana-rpc-url
            AZURE_OPENAI_KEY=secretref:azure-openai-key
